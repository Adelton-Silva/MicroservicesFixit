# Our Nginx server block configuration
server {
    listen 80;
    listen [::]:80;
    server_name localhost;

    # Root directory for serving static files (your React app)
    root /usr/share/nginx/html;

    # Crucial for Single-Page Applications (SPAs) like React.
    # It tells Nginx to try serving the requested URI as a file ($uri),
    # then as a directory ($uri/).
    # If neither is found, then serve the main index.html file,
    # allowing React Router to handle the routing.
    location / {
        try_files $uri $uri/ /index.html;
    }

    # --- Configuration for your API endpoint ---
    # This block handles all requests that start with /api/
    location /api/ {
        # *** THIS IS THE CRITICAL LINE FOR DOCKER COMPOSE ***
        # It must point to the API Gateway service name and its internal port.
        limit_except GET POST PUT DELETE OPTIONS { deny all; }
        proxy_pass http://api_gateway:8088/; 

        # Standard proxy headers for forwarding request details
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Optional: Set timeouts for API calls (can help with slow responses)
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # --- Configuration for your /ws endpoint (if applicable) ---
    # If your WebSocket endpoint also goes through the API Gateway:
    location /ws {
        proxy_pass http://api_gateway:8088/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
        proxy_read_timeout 86400s; # Long timeout for persistent WebSocket connections
    }

    # Custom error pages (optional)
    error_page 404 /404.html;
}