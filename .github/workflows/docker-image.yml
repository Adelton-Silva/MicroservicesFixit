name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Executa quando há um push na branch "main"
  pull_request:
    branches:
      - main  # Executa quando há um PR para "main"

jobs:
  build-and-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    env:
      REGISTRY: docker.io
      DOCKER_USER: ${{ secrets.DOCKER_USER }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USER }}" --password-stdin

      - name: Build and Push AuthService Image
      - run: |
          docker build -t $REGISTRY/${{ secrets.DOCKER_USER }}/auth-service:latest -f AuthService/Dockerfile AuthService/


      - name: Build and Push UserManagementService Image
      - run: |
          docker build -t $REGISTRY/${{ secrets.DOCKER_USER }}/user-management-service:latest -f UserManagementService/Dockerfile UserManagementService/

      - name: Build and Push ServiceManagementService Image
      - run: |
          docker build -t $REGISTRY/${{ secrets.DOCKER_USER }}/service-management-service:latest -f ServiceManagementService/Dockerfile ServiceManagementService/

  deploy:
    name: Deploy to Kubernetes
    needs: build-and-push
    runs-on: ubuntu-latest

    env:
      KUBECONFIG: ${{ secrets.KUBECONFIG }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: "latest"

      - name: Deploy to Kubernetes
        run: |
          echo "${{ secrets.KUBECONFIG }}" > kubeconfig.yaml
          export KUBECONFIG=kubeconfig.yaml
          kubectl apply -f kubernetes-deployment.yaml
          kubectl rollout status deployment/auth-service -n microservices
          kubectl rollout status deployment/user-management-service -n microservices
          kubectl rollout status deployment/service-management-service -n microservices
